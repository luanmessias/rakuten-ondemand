var config = {
    accountsEndpoint: 'https://integration-staging.rakuten.com.br/accounts',
    logisticsEndpoint: 'https://integration-staging.rakuten.com.br/logistics', 
    clientId: '267151D1-F704-467F-B43B-B0361732A1E2'   
}

/**
* Class for Control of Freight Simulator
* @class
*/
function Simulator() {
    if (!(this instanceof Simulator)) {
        return new Simulator();
    }
}

/**
* Access Token
* @type String
* @public
*/
Simulator.token = {};

Simulator.prototype.generateToken = async function () {
    return new Promise(resolve => {
        if (Simulator.token.access_token === undefined) {
            var xhr = new XMLHttpRequest();

            xhr.open("POST", config.accountsEndpoint + '/token', true);

            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

            xhr.onreadystatechange = function () {
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                    Simulator.token = JSON.parse(xhr.response);

                    resolve(Simulator.token.access_token);
                }
            };

            var body = "grant_type=client_credentials&client_id=" + config.clientId;

            xhr.send(body);
        }
        else {
            resolve(Simulator.token.access_token);
        }
    });
};

Simulator.prototype.refreshToken = async function (originZipcode, destinationZipCode, weight, width, height, length) {
    return new Promise(resolve => {
        var xhr = new XMLHttpRequest();

        xhr.open("POST", config.accountsEndpoint + '/token', true);

        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

        xhr.onreadystatechange = function () {
            if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                Simulator.token = JSON.parse(xhr.response);

                resolve(Simulator().simulate(originZipcode, destinationZipCode, weight, width, height, length));
            }
        };

        var body = "grant_type=refresh_token&refresh_token=" + Simulator.token.refresh_token + "&client_id=" + config.clientId;

        xhr.send(body);
    });
};

/**
* Simulate a calculation on Correios
* @this {Simulator}
* @param {string} originZipcode Origin ZipCode of the simulation
* @param {string} destinationZipCode Destination ZipCode of the simulation
* @param {decimal} weight Product Weight of the simulation
* @param {decimal} width Product Width of the simulation
* @param {decimal} height Product Height of the simulation
* @param {decimal} length Product Length of the simulation
* @returns {simulation_result} simulations
**/

Simulator.prototype.simulate = async function (originZipcode, destinationZipCode, weight, width, height, length) {

    var token = await Simulator().generateToken();

    return new Promise(resolve => {

        var body = {
            origin_zipcode: originZipcode,
            destination_zipcode: destinationZipCode,
            weight: weight,
            width: width,
            height: height,
            length: length
        };

        var xhr = new XMLHttpRequest();

        xhr.open("POST", config.logisticsEndpoint + '/calculation/simulate', true);

        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.setRequestHeader("Authorization", "Bearer " + token);

        xhr.onreadystatechange = function () {
            if (this.readyState === XMLHttpRequest.DONE) {
                if (this.status === 200) {
                    resolve(xhr.response);
                }
                if (this.status === 401) {
                    resolve(Simulator().refreshToken(originZipcode, destinationZipCode, weight, width, height, length));
                }
            }
        };

        xhr.send(JSON.stringify(body));
    });
};

